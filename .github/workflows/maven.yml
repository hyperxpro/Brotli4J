name: Java CI with Maven

on:
  push:
  
  pull_request:
    branches: [ "4.1"]
    
  workflow_dispatch:
    inputs:
      name:
        description: 'Github Actions'
        required: true
        default: 'Github Actions'

jobs:

  macos-build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 8
          architecture: x64
      - name: Build with Maven
        run: mvn -B -ntp clean package --file pom.xml
      - name: Upload the build
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: /Users/runner/work/Brotli4j/


  linux-x86_64-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build centos6
        run: docker-compose -f docker/docker-compose.yml run build
      - name: Upload the build
        uses: actions/upload-artifact@v3
        with:
          name: linux-x86_64-build
          path: /home/runner/work/Brotli4j/


  linux-aarch64-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        env:
          cache-name: cache-m2-repository
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-pr-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-pr-${{ env.cache-name }}-
            ${{ runner.os }}-pr-
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu20.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Mount the .m2/repository
          dockerRunArgs: |
            --volume "/home/runner/.m2/repository/:/root/.m2/repository"
          # Install dependencies
          install: |
            apt-get update -q -y
            apt-get install -q -y openjdk-8-jdk autoconf automake libtool make tar maven git cmake build-essential
          run: |
            JAVA_HOME=/usr/lib/jvm/java-8-openjdk-arm64 mvn -B -ntp clean package
      - name: Upload the build
        uses: actions/upload-artifact@v3
        with:
          name: linux-aarch64-build
          path: /home/runner/work/Brotli4j/


  windows-x86_64-build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 8
          architecture: x64
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.5.0
      - name: Build with Maven
        run: mvn -B -ntp clean package --file pom.xml
      - name: Upload the build
        uses: actions/upload-artifact@v3
        with:
          name: windows-x86_64-build
          path: D:\a\Brotli4j\
